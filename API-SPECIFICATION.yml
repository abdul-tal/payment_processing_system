openapi: 3.0.3
info:
  title: Payment Backend Service API
  description: A robust payment backend service integrating with Authorize.Net for payment processing, subscription management, and webhook handling.
  version: 1.0.0
  contact:
    name: Payment Backend Team
    email: support@payment-backend.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: http://localhost:3000/api/v1
    description: Development server
  - url: https://api-staging.payment-backend.com/api/v1
    description: Staging server
  - url: https://api.payment-backend.com/api/v1
    description: Production server

security:
  - ApiKeyAuth: []

paths:
  /health:
    get:
      summary: Health check endpoint
      description: Returns the health status of the service and its dependencies
      security: []
      responses:
        '200':
          description: Service is healthy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthResponse'

  /metrics:
    get:
      summary: Prometheus metrics
      description: Returns Prometheus-formatted metrics for monitoring
      security: []
      responses:
        '200':
          description: Metrics in Prometheus format
          content:
            text/plain:
              schema:
                type: string

  /payments/purchase:
    post:
      summary: Process a purchase transaction
      description: Execute a single-step payment transaction (authorize and capture)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PurchaseRequest'
      responses:
        '200':
          description: Transaction processed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionResponse'
        '400':
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '402':
          description: Payment declined
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /payments/authorize:
    post:
      summary: Authorize a payment
      description: Place an authorization hold on funds without capturing
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthorizeRequest'
      responses:
        '200':
          description: Authorization successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationResponse'

  /payments/capture:
    post:
      summary: Capture an authorized payment
      description: Capture funds from a previously authorized transaction
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CaptureRequest'
      responses:
        '200':
          description: Capture successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionResponse'

  /payments/refund:
    post:
      summary: Refund a transaction
      description: Process a full or partial refund for a completed transaction
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefundRequest'
      responses:
        '200':
          description: Refund processed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionResponse'

  /payments/cancel:
    post:
      summary: Cancel an authorization
      description: Cancel a previously authorized but not captured transaction
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelRequest'
      responses:
        '200':
          description: Authorization canceled successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionResponse'

  /subscriptions:
    post:
      summary: Create a subscription
      description: Create a new recurring billing subscription
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSubscriptionRequest'
      responses:
        '201':
          description: Subscription created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionResponse'

  /subscriptions/{subscriptionId}:
    get:
      summary: Get subscription details
      description: Retrieve details for a specific subscription
      parameters:
        - name: subscriptionId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Subscription details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionResponse'

    put:
      summary: Update subscription
      description: Update an existing subscription
      parameters:
        - name: subscriptionId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSubscriptionRequest'
      responses:
        '200':
          description: Subscription updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionResponse'

    delete:
      summary: Cancel subscription
      description: Cancel an active subscription
      parameters:
        - name: subscriptionId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Subscription canceled successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionResponse'

  /webhooks/authorize-net:
    post:
      summary: Authorize.Net webhook endpoint
      description: Receive webhook notifications from Authorize.Net
      security:
        - WebhookSignature: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Webhook processed successfully

components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key
    WebhookSignature:
      type: apiKey
      in: header
      name: X-ANET-Signature

  schemas:
    PurchaseRequest:
      type: object
      required:
        - amount
        - currency
        - paymentMethod
        - customer
        - idempotencyKey
      properties:
        amount:
          type: number
          description: Amount in cents
          example: 2500
        currency:
          type: string
          enum: [USD]
          example: USD
        paymentMethod:
          $ref: '#/components/schemas/PaymentMethod'
        customer:
          $ref: '#/components/schemas/Customer'
        metadata:
          type: object
          additionalProperties: true
        idempotencyKey:
          type: string
          description: Unique key to prevent duplicate transactions
          example: "txn_12345_20250908"

    AuthorizeRequest:
      allOf:
        - $ref: '#/components/schemas/PurchaseRequest'

    CaptureRequest:
      type: object
      required:
        - authorizationId
        - idempotencyKey
      properties:
        authorizationId:
          type: string
          description: ID of the authorization to capture
        amount:
          type: number
          description: Amount to capture (optional, defaults to full amount)
        idempotencyKey:
          type: string

    RefundRequest:
      type: object
      required:
        - transactionId
        - amount
        - idempotencyKey
      properties:
        transactionId:
          type: string
          description: ID of the transaction to refund
        amount:
          type: number
          description: Amount to refund in cents
        reason:
          type: string
          description: Reason for refund
        idempotencyKey:
          type: string

    CancelRequest:
      type: object
      required:
        - authorizationId
        - idempotencyKey
      properties:
        authorizationId:
          type: string
          description: ID of the authorization to cancel
        idempotencyKey:
          type: string

    CreateSubscriptionRequest:
      type: object
      required:
        - customerId
        - planId
        - paymentMethod
        - billingCycle
        - amount
      properties:
        customerId:
          type: string
        planId:
          type: string
        paymentMethod:
          $ref: '#/components/schemas/PaymentMethod'
        billingCycle:
          type: string
          enum: [monthly, quarterly, annually]
        amount:
          type: number
          description: Amount in cents
        startDate:
          type: string
          format: date-time
        trialPeriodDays:
          type: integer
          minimum: 0
        metadata:
          type: object
          additionalProperties: true

    UpdateSubscriptionRequest:
      type: object
      properties:
        amount:
          type: number
        billingCycle:
          type: string
          enum: [monthly, quarterly, annually]
        paymentMethod:
          $ref: '#/components/schemas/PaymentMethod'
        metadata:
          type: object
          additionalProperties: true

    PaymentMethod:
      type: object
      required:
        - type
      properties:
        type:
          type: string
          enum: [credit_card, bank_account]
        cardNumber:
          type: string
          description: Credit card number (will be tokenized)
          example: "4111111111111111"
        expiryMonth:
          type: string
          pattern: '^(0[1-9]|1[0-2])$'
          example: "12"
        expiryYear:
          type: string
          pattern: '^20[0-9]{2}$'
          example: "2025"
        cvv:
          type: string
          pattern: '^[0-9]{3,4}$'
          example: "123"
        cardholderName:
          type: string
          example: "John Doe"

    Customer:
      type: object
      required:
        - id
        - email
        - firstName
        - lastName
        - address
      properties:
        id:
          type: string
          example: "cust_12345"
        email:
          type: string
          format: email
          example: "john.doe@example.com"
        firstName:
          type: string
          example: "John"
        lastName:
          type: string
          example: "Doe"
        phone:
          type: string
          example: "+1234567890"
        address:
          $ref: '#/components/schemas/Address'

    Address:
      type: object
      required:
        - street
        - city
        - state
        - zipCode
        - country
      properties:
        street:
          type: string
          example: "123 Main St"
        city:
          type: string
          example: "New York"
        state:
          type: string
          example: "NY"
        zipCode:
          type: string
          example: "10001"
        country:
          type: string
          example: "US"

    TransactionResponse:
      type: object
      properties:
        transactionId:
          type: string
          example: "txn_67890"
        status:
          type: string
          enum: [success, failed, pending]
        amount:
          type: number
        currency:
          type: string
        authCode:
          type: string
        transactionReference:
          type: string
        timestamp:
          type: string
          format: date-time
        correlationId:
          type: string
        error:
          $ref: '#/components/schemas/ErrorObject'

    AuthorizationResponse:
      type: object
      properties:
        authorizationId:
          type: string
        status:
          type: string
          enum: [authorized, declined]
        amount:
          type: number
        expiresAt:
          type: string
          format: date-time
        correlationId:
          type: string
        error:
          $ref: '#/components/schemas/ErrorObject'

    SubscriptionResponse:
      type: object
      properties:
        subscriptionId:
          type: string
        customerId:
          type: string
        planId:
          type: string
        status:
          type: string
          enum: [active, trial, canceled, past_due]
        amount:
          type: number
        currency:
          type: string
        billingCycle:
          type: string
        nextBillingDate:
          type: string
          format: date-time
        trialEndDate:
          type: string
          format: date-time
        createdAt:
          type: string
          format: date-time
        correlationId:
          type: string

    HealthResponse:
      type: object
      properties:
        status:
          type: string
          enum: [healthy, degraded, unhealthy]
        timestamp:
          type: string
          format: date-time
        version:
          type: string
        dependencies:
          type: object
          properties:
            database:
              type: string
              enum: [healthy, unhealthy]
            redis:
              type: string
              enum: [healthy, unhealthy]
            authorize_net:
              type: string
              enum: [healthy, unhealthy]
        metrics:
          type: object
          properties:
            uptime:
              type: number
            memoryUsage:
              type: number
            activeConnections:
              type: number

    ErrorResponse:
      type: object
      properties:
        error:
          $ref: '#/components/schemas/ErrorObject'

    ErrorObject:
      type: object
      properties:
        code:
          type: string
          example: "CARD_DECLINED"
        message:
          type: string
          example: "The credit card was declined"
        details:
          type: object
          additionalProperties: true
        correlationId:
          type: string
        timestamp:
          type: string
          format: date-time
